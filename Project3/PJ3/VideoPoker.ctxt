#BlueJ class context
comment0.target=VideoPoker
comment0.text=\ This\ is\ the\ video\ poker\ game\ class.\n\ It\ uses\ OneDeck\ and\ Card\ objects\ to\ implement\ video\ poker\ game.\n\ Please\ do\ not\ modify\ any\ data\ fields\ or\ defined\ methods\n\ You\ may\ add\ new\ data\ fields\ and\ methods\n\ Note\:\ You\ must\ implement\ defined\ methods\n
comment1.params=
comment1.target=VideoPoker()
comment1.text=default\ constructor,\ set\ balance\ \=\ defaultBalance
comment10.params=e
comment10.target=boolean\ Straight(java.util.List)
comment11.params=
comment11.target=boolean\ Flush()
comment12.params=f
comment12.target=boolean\ straightFlush(java.util.List)
comment13.params=
comment13.target=boolean\ royalFlush()
comment14.params=
comment14.target=void\ changeCards()
comment15.params=
comment15.target=void\ play()
comment16.params=
comment16.target=void\ testCheckHands()
comment16.text=\ testCheckHands\ is\ used\ to\ test\ checkHands()\ method\ \n\ \ checkHands()\ should\ print\ your\ current\ hand\ type\n
comment17.params=
comment17.target=void\ testOneDeck()
comment17.text=\ testOneDeck()\ is\ used\ to\ test\ OneDeck\ class\ \ \n\ \ testOneDeck()\ should\ execute\ OneDeck's\ main()\n
comment18.params=args
comment18.target=void\ main(java.lang.String[])
comment18.text=Quick\ testCheckHands()
comment2.params=balance
comment2.target=VideoPoker(int)
comment2.text=constructor,\ set\ given\ balance
comment3.params=
comment3.target=void\ showPayoutTable()
comment3.text=\ This\ display\ the\ payout\ table\ based\ on\ winningMultipliers\ and\ \nwinningHands\ arrays
comment4.params=
comment4.target=void\ checkHands()
comment4.text=\ Check\ current\ playerHand\ using\ winningMultipliers\ and\ winningHands\ arrays\n\ \ Must\ print\ yourHandType\ (default\ is\ "Sorry,\ you\ lost")\ at\ the\ end\ of\ function.\n\ \ This\ can\ be\ checked\ by\ testCheckHands()\ and\ main()\ method.\n
comment5.params=
comment5.target=boolean\ royalPair()
comment5.text=\n\ \ \ add\ additional\ private\ methods\ here\ ....\n\n
comment6.params=a
comment6.target=boolean\ twoPair(java.util.List)
comment7.params=b
comment7.target=boolean\ threeKind(java.util.List)
comment8.params=c
comment8.target=boolean\ FullHouse(java.util.List)
comment9.params=d
comment9.target=boolean\ fourKind(java.util.List)
numComments=19
