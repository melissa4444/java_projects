#BlueJ class context
comment0.target=FractionInterface
comment0.text=Do\ not\ modify\ this\ file\!
comment1.params=num\ den
comment1.target=void\ setFraction(int,\ int)
comment1.text=\ Task\:\ Sets\ "this"\ fraction\ to\ a\ given\ value.\n\ \ @param\ num\ is\ the\ integer\ numerator\n\ \ @param\ den\ is\ the\ integer\ denominator\n@throw\ Project1Exception\ if\ denominator\ is\ 0
comment2.params=
comment2.target=int\ getNumerator()
comment2.text=\ Task\:\ Gets\ the\ fraction's\ numerator.\n@return\ the\ fraction's\ numerator
comment3.params=
comment3.target=int\ getDenominator()
comment3.text=\ Task\:\ Gets\ the\ fraction's\ denominator.\n@return\ the\ fraction's\ denominator
comment4.params=
comment4.target=char\ getSign()
comment4.text=\ Task\:\ Gets\ the\ fraction's\ sign.\n@return\ the\ fraction's\ sign
comment5.params=sign
comment5.target=void\ setSign(char)
comment5.text=\ Task\:\ Sets\ the\ numerator's\ sign\ to\ the\ fraction's\ sign,\n\tand\ sets\ the\ denominator's\ sign\ to\ +.\n@param\ sign\ a\ character\ that\ represents\ the\ fraction's\ sign
comment6.params=secondFraction
comment6.target=FractionInterface\ add(FractionInterface)
comment6.text=\ Task\:\ Adds\ two\ fractions.\n\ \ @param\ secondFraction\ is\ a\ fraction\ that\ is\ the\ second\ operand\ of\ the\ addition\n\ \ @return\ a\ new\ fraction\ which\ is\ the\ sum\ of\ "this"\ fraction\ and\ the\ secondFraction\ \nNote\:\ do\ not\ reduce\ the\ returning\ fraction
comment7.params=secondFraction
comment7.target=FractionInterface\ subtract(FractionInterface)
comment7.text=\ Task\:\ Subtracts\ two\ fractions.\n\ \ @param\ secondFraction\ a\ fraction\ that\ is\ the\ second\ operand\ of\ the\ subtraction\n\ \ @return\ a\ new\ fraction\ which\ is\ the\ difference\ of\ "this"\ fraction\ and\ the\ second\ operand\ \nNote\:\ do\ not\ reduce\ the\ returning\ fraction
comment8.params=secondFraction
comment8.target=FractionInterface\ multiply(FractionInterface)
comment8.text=\ Task\:\ Multiplies\ two\ fractions.\n\ \ @param\ secondFraction\ a\ fraction\ that\ is\ the\ second\ operand\ of\ the\ multiplication\n\ \ @return\ a\ new\ fraction\ which\ is\ the\ product\ of\ "this"\ fraction\ and\ the\ secondFraction\nNote\:\ do\ not\ reduce\ the\ returning\ fraction
comment9.params=secondFraction
comment9.target=FractionInterface\ divide(FractionInterface)
comment9.text=\ Task\:\ Divides\ two\ fractions.\n\ \ @param\ secondFraction\ a\ fraction\ that\ is\ the\ second\ operand\ of\ the\ division\n\ \ @return\ a\ new\ fraction\ which\ the\ quotient\ of\ "this"\ fraction\ and\ the\ secondFraction\n\ \ \ \ \ \ \ \ \ \ Note\:\ do\ not\ reduce\ the\ returning\ fraction\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n@throw\ Project1Exception\ if\ secondFraction\ is\ 0
numComments=10
